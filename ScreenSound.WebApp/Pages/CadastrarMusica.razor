@page "/MusicaCadastrar"
@inject ArtistaAPI artistasAPI
@* @inject GeneroAPI generoAPI *@
@inject NavigationManager navigationManager

<MudPaper Class="px-8 pt-2 pb-4 mx-12 my-8" Justify="Justify.Center">

    <MudText Class="mt-8" Typo="Typo.h4">Cadastro de Música</MudText>

    <MudForm>

        <MudTextField Class="mt-4" T="string" Placeholder="Nome da música/canção"
                      @bind-Value="nome"
                      Variant="Variant.Outlined"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        <MudSelect Class="mt-4" T="ArtistaResponse" Label="Artistas"
                   Variant="Variant.Filled" ValueChanged="@ArtistaSelecionado" AnchorOrigin="Origin.BottomCenter">
            @if(artistas is not null)
            {
                @foreach(var artista in artistas)
                {
                    <MudSelectItem Value="artista" >@artista.Nome</MudSelectItem>
                }
            }
        </MudSelect>        

        <MudTextField Class="mt-4" T="int" Placeholder="Ano de lançamento"
                      @bind-Value="anoLancamento"
                      Variant="Variant.Outlined"
                      Lines="1"
                      Required="true"
                      RequiredError="Campo obrigatório." />

        <MudSelect Class="mt-4" T="GeneroResponse" Label="Gêneros"
                   Variant="Variant.Filled" ValueChanged="@GeneroSelecionado" AnchorOrigin="Origin.BottomCenter">
            @if (generos is not null)
            {
                @foreach (var genero in generos)
                {
                    <MudSelectItem Value="genero">@genero.Nome</MudSelectItem>
                }
            }
            @if(GenerosSelecionados is not null)
            {
                @foreach (var genero in GenerosSelecionados)
                {
                    <MudAlert Severity="Severity.Info">@(genero.Nome) adicionado como genero</MudAlert>
                }
            }
        </MudSelect>


        <div class="d-flex align-center justify-space-between mt-4">
            <MudButton Variant="Variant.Filled"
                       @onclick="Cadastrar"
                       Color="Color.Primary"
                       Class="ml-auto">
                Cadastrar
            </MudButton>
            <MudButton Variant="Variant.Filled"
                       Color="Color.Info"
                       Class="ml-3">
                Voltar
            </MudButton>
        </div>

    </MudForm>

</MudPaper>

@code {
    private int anoLancamento;
    private string? nome;

    private ICollection<ArtistaResponse>? artistas;
    private ICollection<GeneroResponse>? generos;

    private List<GeneroResponse>? GenerosSelecionados { get; set; } = new();
    private ArtistaResponse? ArtistaDaMusica { get; set; }

    private List<GeneroRequest> GeneroRequest { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        artistas = await artistasAPI.GetArtistasAsync();
        generos = await artistasAPI.GetGenerosAsync();
    }

    private void ArtistaSelecionado(ArtistaResponse artista)
    {
        ArtistaDaMusica = artista;
    }

    private void GeneroSelecionado(GeneroResponse genero)
    {
        if (GenerosSelecionados is not null)
        {
            if (!GenerosSelecionados.Contains(genero))
            {
                GenerosSelecionados.Add(genero);
            }
        }
    }
    
    public async Task Cadastrar()
    {
        if (GenerosSelecionados is not null)
        {
            foreach(var genero in GenerosSelecionados)
        {
                GeneroRequest.Add(new GeneroRequest(genero.Nome,
                genero.Descricao));
            }
        }
        var musicaRequest = new MusicaRequest(nome!, ArtistaDaMusica!.Id,
            anoLancamento, GeneroRequest);
        await artistasAPI.AddMusicaAsync(musicaRequest);

        navigationManager.NavigateTo("/MusicasPorArtista");

    }

}
