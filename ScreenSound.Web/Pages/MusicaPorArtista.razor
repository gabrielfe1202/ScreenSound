@page "/MusicasPorArtista"
@inject ArtistaAPI artistasAPI

<MudContainer MaxWidth="MaxWidth.Large">
    <MudStack Class="mt-4 mb-4" Row="true" Justify="Justify.SpaceBetween">
        <MudText Class="mb-4" Typo="Typo.h4">Músicas cadastradas</MudText>
        <MudPagination Count="@totalPaginas" SelectedChanged="PaginaMudou"></MudPagination>
    </MudStack>

    @if (musicaPorPagina is not null)
    {
        <MudGrid>
            @foreach (var musica in musicaPorPagina)
            {
                <MudItem xs="3">
                    <CardMusica Musica="musica" />
                </MudItem>
            }
        </MudGrid>
    }
    else
    {
        <MudGrid>
            @for (var i = 0; i < 4; i++)
            {
                <MudItem xs="3">
                    <MudCard>
                        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="200px" />
                        <MudCardContent>
                            <MudSkeleton Width="30%" Height="42px;" />
                            <MudSkeleton Width="80%" />
                            <MudSkeleton Width="100%" />
                        </MudCardContent>
                        <MudCardActions>
                            @* <MudSkeleton Width="64px" Height="40px" Class="ml-2" /> *@
                            <MudSkeleton Width="105px" Height="40px" Class="ml-3" />
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
</MudContainer>

@code {
    private int tamanho = 8;
    private int totalItens;
    private int totalPaginas;
    private ICollection<MusicaResponse>? musicas;
    private ICollection<MusicaResponse>? musicaPorPagina;

    protected override async Task OnInitializedAsync()
    {
        musicas = await artistasAPI.GetMusicasAsync();
        if (musicas is not null)
        {
            musicas = musicas.OrderByDescending(a => a.Id).ToList();
            totalItens = musicas.Count();
            totalPaginas = Convert.ToInt32(Math.Ceiling((totalItens * 1.0) / tamanho));
            this.PaginaMudou(1);
        }

    }
    private void PaginaMudou(int pageNumber)
    {
        var indice = pageNumber - 1;
        musicaPorPagina = musicas!
            .Skip(tamanho * indice)
            .Take(tamanho)
            .ToList();
    }
}